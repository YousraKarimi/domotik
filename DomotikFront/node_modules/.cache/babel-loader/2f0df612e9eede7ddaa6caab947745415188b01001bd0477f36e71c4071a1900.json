{"ast":null,"code":"export const fetchNotifications = async userId => {\n  try {\n    const response = await fetch(GET_NOTIFICATIONS(userId), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch notifications');\n    }\n    const data = await response.json();\n    console.log('Fetched notifications:', data); // Vérification des données\n    return data;\n  } catch (error) {\n    console.error('Error fetching notifications:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["fetchNotifications","userId","response","fetch","GET_NOTIFICATIONS","method","headers","ok","Error","data","json","console","log","error"],"sources":["C:/Users/Youssra/Desktop/PAAS/House_App/House_front/src/components/Notifications.js"],"sourcesContent":["export const fetchNotifications = async (userId) => {\r\n    try {\r\n        const response = await fetch(GET_NOTIFICATIONS(userId), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch notifications');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Fetched notifications:', data);  // Vérification des données\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n        return [];\r\n    }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAOC,MAAM,IAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,iBAAiB,CAACH,MAAM,CAAC,EAAE;MACpDI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IACpD;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC,CAAC,CAAE;IAC9C,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}