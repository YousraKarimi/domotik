{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youssra\\\\Desktop\\\\Architectures distribu\\xE9es PaaS\\\\Paas_TP\\\\House_front\\\\src\\\\components\\\\ConfigurationUpdateList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GET_CONFIG_LOGIN } from '../constants/back';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ConfigurationList.css';\nimport { FaCogs, FaExclamationCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigurationUpdateList = () => {\n  _s();\n  const [configurations, setConfigurations] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const fullName = localStorage.getItem('username');\n  useEffect(() => {\n    const fetchConfigurations = async () => {\n      if (!fullName) {\n        setError('User full name not provided');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(GET_CONFIG_LOGIN(fullName));\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to fetch configurations');\n        }\n        const data = await response.json();\n        setConfigurations(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConfigurations();\n  }, [fullName]);\n  const handleConfigClick = deviceId => {\n    if (deviceId) {\n      navigate(`/update-configuration/${deviceId}`);\n    } else {\n      setError('Device ID not found.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"config-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Configurations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading configurations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), !loading && configurations.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No configurations found for user \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 53\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-card-grid\",\n      children: configurations.map(config => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-card\",\n        onClick: () => {\n          var _config$device;\n          return handleConfigClick((_config$device = config.device) === null || _config$device === void 0 ? void 0 : _config$device.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(FaCogs, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: config.configurationName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Energy Saving:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 32\n            }, this), \" \", config.energySaving ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 32\n            }, this), \" \", config.mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Schedule:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 32\n            }, this), \" \", config.schedule]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, config.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ConfigurationUpdateList, \"zV/IvnLaddTzkcjABQ1iDQBoBqA=\", false, function () {\n  return [useNavigate];\n});\n_c = ConfigurationUpdateList;\nexport default ConfigurationUpdateList;\nvar _c;\n$RefreshReg$(_c, \"ConfigurationUpdateList\");","map":{"version":3,"names":["React","useEffect","useState","GET_CONFIG_LOGIN","useNavigate","FaCogs","FaExclamationCircle","jsxDEV","_jsxDEV","ConfigurationUpdateList","_s","configurations","setConfigurations","error","setError","loading","setLoading","navigate","fullName","localStorage","getItem","fetchConfigurations","response","fetch","ok","errorData","json","Error","data","err","message","handleConfigClick","deviceId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","config","onClick","_config$device","device","id","size","configurationName","energySaving","mode","schedule","_c","$RefreshReg$"],"sources":["C:/Users/Youssra/Desktop/Architectures distribuÃ©es PaaS/Paas_TP/House_front/src/components/ConfigurationUpdateList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GET_CONFIG_LOGIN } from '../constants/back';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ConfigurationList.css';\r\nimport { FaCogs, FaExclamationCircle } from 'react-icons/fa';\r\n\r\nconst ConfigurationUpdateList = () => {\r\n    const [configurations, setConfigurations] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    const fullName = localStorage.getItem('username');\r\n\r\n    useEffect(() => {\r\n        const fetchConfigurations = async () => {\r\n            if (!fullName) {\r\n                setError('User full name not provided');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(GET_CONFIG_LOGIN(fullName));\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.error || 'Failed to fetch configurations');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setConfigurations(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchConfigurations();\r\n    }, [fullName]);\r\n\r\n    const handleConfigClick = (deviceId) => {\r\n        if (deviceId) {\r\n            navigate(`/update-configuration/${deviceId}`);\r\n        } else {\r\n            setError('Device ID not found.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"config-list-container\">\r\n            <h1>My Configurations</h1>\r\n\r\n            {loading && <p>Loading configurations...</p>}\r\n\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    <FaExclamationCircle /> {error}\r\n                </div>\r\n            )}\r\n\r\n            {!loading && configurations.length === 0 && !error && (\r\n                <p>No configurations found for user <strong>{fullName}</strong>.</p>\r\n            )}\r\n\r\n            <div className=\"config-card-grid\">\r\n                {configurations.map((config) => (\r\n                    <div\r\n                        className=\"config-card\"\r\n                        key={config.id}\r\n                        onClick={() => handleConfigClick(config.device?.id)}\r\n                    >\r\n                        <div className=\"icon-container\">\r\n                            <FaCogs size={50} />\r\n                        </div>\r\n                        <div className=\"config-details\">\r\n                            <h3>{config.configurationName}</h3>\r\n                            <p><strong>Energy Saving:</strong> {config.energySaving ? 'Yes' : 'No'}</p>\r\n                            <p><strong>Mode:</strong> {config.mode}</p>\r\n                            <p><strong>Schedule:</strong> {config.schedule}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfigurationUpdateList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}