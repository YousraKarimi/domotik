{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youssra\\\\Desktop\\\\Architectures distribu\\xE9es PaaS\\\\Paas_TP\\\\House_front\\\\src\\\\components\\\\DeviceList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GET_DEVICES_LOGIN } from '../constants/back';\nimport '../styles/DeviceList.css';\nimport { FaExclamationCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const login = localStorage.getItem('username'); // Récupération du login depuis localStorage\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      if (!login) {\n        setError('User login not provided');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(GET_DEVICES_LOGIN(login));\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to fetch devices');\n        }\n        const data = await response.json();\n        setDevices(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDevices();\n  }, [login]);\n\n  // Gestion du clic sur un appareil\n  const handleDeviceClick = deviceId => {\n    navigate(`/device/${deviceId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"device-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading devices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), !loading && devices.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No devices found for user \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 46\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"device-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: devices.map(device => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: device.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: device.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: device.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeviceClick(device.id),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, device.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceList, \"7ogcFrJz62pJcN2FRV9PB5ok0Co=\", false, function () {\n  return [useNavigate];\n});\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","GET_DEVICES_LOGIN","FaExclamationCircle","jsxDEV","_jsxDEV","DeviceList","_s","devices","setDevices","error","setError","loading","setLoading","navigate","login","localStorage","getItem","fetchDevices","response","fetch","ok","errorData","json","Error","data","err","message","handleDeviceClick","deviceId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","device","name","type","status","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Youssra/Desktop/Architectures distribuées PaaS/Paas_TP/House_front/src/components/DeviceList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GET_DEVICES_LOGIN } from '../constants/back';\r\nimport '../styles/DeviceList.css';\r\nimport { FaExclamationCircle } from 'react-icons/fa';\r\n\r\nconst DeviceList = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const navigate = useNavigate();\r\n    const login = localStorage.getItem('username');  // Récupération du login depuis localStorage\r\n\r\n    useEffect(() => {\r\n        const fetchDevices = async () => {\r\n            if (!login) {\r\n                setError('User login not provided');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(GET_DEVICES_LOGIN(login));\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.error || 'Failed to fetch devices');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setDevices(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDevices();\r\n    }, [login]);\r\n\r\n    // Gestion du clic sur un appareil\r\n    const handleDeviceClick = (deviceId) => {\r\n        navigate(`/device/${deviceId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"device-list-container\">\r\n            <h1>My Devices</h1>\r\n\r\n            {loading && <p>Loading devices...</p>}\r\n\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    <FaExclamationCircle /> {error}\r\n                </div>\r\n            )}\r\n\r\n            {!loading && devices.length === 0 && !error && (\r\n                <p>No devices found for user <strong>{login}</strong>.</p>\r\n            )}\r\n\r\n            <table className=\"device-table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Device Name</th>\r\n                    <th>Type</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {devices.map((device) => (\r\n                    <tr key={device.id}>\r\n                        <td>{device.name}</td>\r\n                        <td>{device.type}</td>\r\n                        <td>{device.status}</td>\r\n                        <td>\r\n                            <button onClick={() => handleDeviceClick(device.id)}>\r\n                                View Details\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}