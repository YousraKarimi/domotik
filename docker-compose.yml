services:
  iot-service:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./IotService/config:/mosquitto/config
      - ./IotService/data:/mosquitto/data
      - ./IotService/log:/mosquitto/log
    environment:
      - MOSQUITTO_PASSWORD_FILE=/mosquitto/config/pwfile

  queuing-service:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    volumes:
      - ./QueuingService/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=ing3
      - RABBITMQ_DEFAULT_PASS=paas
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
    ports:
      - "5672:5672"
      - "15672:15672"

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./CacheServer/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  config-service:
    build:
      context: ./ConfigService
      dockerfile: Dockerfile
    container_name: config_service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://34.163.9.144:5432/domotik
      - SPRING_DATASOURCE_USERNAME=domotik
      - SPRING_DATASOURCE_PASSWORD=episen2025ncc
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    depends_on:
      - queuing-service
    ports:
      - "8085:8085"

  notification-service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    container_name: notification_service
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      - redis
    ports:
      - "8083:8083"

  notification-manager:
    build:
      context: ./NotificationManager
      dockerfile: Dockerfile
    container_name: notification_manager
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_LOG_QUEUE: log_queue
      RABBITMQ_LOG_EXCHANGE: log_exchange
      RABBITMQ_LOG_KEY: log_routing_key
      RABBITMQ_USER: ing3
      RABBITMQ_PASS: paas
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_HOST: 34.163.9.144
      POSTGRES_DB: domotik
      POSTGRES_USER: domotik
      POSTGRES_PASSWORD: episen2025ncc
      POSTGRES_PORT: 5432
    depends_on:
      - queuing-service
      - redis
    volumes:
      - ./NotificationManager:/app
    command: [ "poetry", "run", "python", "main.py" ]

  data-exchange:
    build:
      context: ./DataExchange
      dockerfile: Dockerfile
    container_name: data_exchange
    environment:
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      MQTT_CONS_TOPIC: mqtt/log-topic
      MQTT_PROD_TOPIC: mqtt/config-topic
      MQTT_USER: exchange
      MQTT_PASS: toto
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_CONF_EXCHANGE: config_exchange
      RABBITMQ_CONF_QUEUE: config_queue
      RABBITMQ_CONF_KEY: config_routing_key
      RABBITMQ_LOG_EXCHANGE: log_exchange
      RABBITMQ_LOG_QUEUE: log_queue
      RABBITMQ_LOG_KEY: log_routing_key
      RABBITMQ_USER: ing3
      RABBITMQ_PASS: paas
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      POSTGRES_HOST: 34.163.9.144
      POSTGRES_DB: domotik
      POSTGRES_USER: domotik
      POSTGRES_PASSWORD: episen2025ncc
      POSTGRES_PORT: 5432
    depends_on:
      - queuing-service
      - iot-service
      - mongodb
    volumes:
      - ./DataExchange:/app
    command: [ "poetry", "run", "python", "main.py" ]

  frontend:
    container_name: frontend
    build:
      context: ./DomotikFront
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - config-service
      - notification-service

volumes:
  redis_data:






